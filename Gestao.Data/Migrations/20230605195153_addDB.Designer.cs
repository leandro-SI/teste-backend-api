// <auto-generated />
using System;
using Gestao.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gestao.Data.Migrations
{
    [DbContext(typeof(GestaoContext))]
    [Migration("20230605195153_addDB")]
    partial class addDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("Gestao.Domain.Models.Arquivo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caminho")
                        .HasColumnName("caminho")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extensao")
                        .HasColumnName("extensao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("TEXT");

                    b.Property<long>("TarefaId")
                        .HasColumnName("tarefa_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TarefaId");

                    b.ToTable("arquivos");
                });

            modelBuilder.Entity("Gestao.Domain.Models.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("pessoas");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nome = "João Silva"
                        },
                        new
                        {
                            Id = 2L,
                            Nome = "Ana Silva"
                        });
                });

            modelBuilder.Entity("Gestao.Domain.Models.Tarefa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataFim")
                        .HasColumnName("data_fim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnName("data_inicio")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("DuracaoEstimada")
                        .HasColumnName("duracao_estimada")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("TEXT");

                    b.Property<long>("PessoaId")
                        .HasColumnName("pessoa_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Situacao")
                        .HasColumnName("situacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("tarefas");
                });

            modelBuilder.Entity("Gestao.Domain.Models.Arquivo", b =>
                {
                    b.HasOne("Gestao.Domain.Models.Tarefa", "Tarefa")
                        .WithMany()
                        .HasForeignKey("TarefaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestao.Domain.Models.Tarefa", b =>
                {
                    b.HasOne("Gestao.Domain.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
